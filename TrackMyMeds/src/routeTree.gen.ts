/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MedicationListImport } from './routes/MedicationList'
import { Route as HomeImport } from './routes/Home'
import { Route as HistoryImport } from './routes/History'
import { Route as AuthImport } from './routes/Auth'
import { Route as AddMedicationImport } from './routes/AddMedication'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const MedicationListRoute = MedicationListImport.update({
  id: '/MedicationList',
  path: '/MedicationList',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/Home',
  path: '/Home',
  getParentRoute: () => rootRoute,
} as any)

const HistoryRoute = HistoryImport.update({
  id: '/History',
  path: '/History',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/Auth',
  path: '/Auth',
  getParentRoute: () => rootRoute,
} as any)

const AddMedicationRoute = AddMedicationImport.update({
  id: '/AddMedication',
  path: '/AddMedication',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/AddMedication': {
      id: '/AddMedication'
      path: '/AddMedication'
      fullPath: '/AddMedication'
      preLoaderRoute: typeof AddMedicationImport
      parentRoute: typeof rootRoute
    }
    '/Auth': {
      id: '/Auth'
      path: '/Auth'
      fullPath: '/Auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/History': {
      id: '/History'
      path: '/History'
      fullPath: '/History'
      preLoaderRoute: typeof HistoryImport
      parentRoute: typeof rootRoute
    }
    '/Home': {
      id: '/Home'
      path: '/Home'
      fullPath: '/Home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/MedicationList': {
      id: '/MedicationList'
      path: '/MedicationList'
      fullPath: '/MedicationList'
      preLoaderRoute: typeof MedicationListImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/AddMedication': typeof AddMedicationRoute
  '/Auth': typeof AuthRoute
  '/History': typeof HistoryRoute
  '/Home': typeof HomeRoute
  '/MedicationList': typeof MedicationListRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/AddMedication': typeof AddMedicationRoute
  '/Auth': typeof AuthRoute
  '/History': typeof HistoryRoute
  '/Home': typeof HomeRoute
  '/MedicationList': typeof MedicationListRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/AddMedication': typeof AddMedicationRoute
  '/Auth': typeof AuthRoute
  '/History': typeof HistoryRoute
  '/Home': typeof HomeRoute
  '/MedicationList': typeof MedicationListRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/AddMedication'
    | '/Auth'
    | '/History'
    | '/Home'
    | '/MedicationList'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/AddMedication'
    | '/Auth'
    | '/History'
    | '/Home'
    | '/MedicationList'
  id:
    | '__root__'
    | '/'
    | '/AddMedication'
    | '/Auth'
    | '/History'
    | '/Home'
    | '/MedicationList'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddMedicationRoute: typeof AddMedicationRoute
  AuthRoute: typeof AuthRoute
  HistoryRoute: typeof HistoryRoute
  HomeRoute: typeof HomeRoute
  MedicationListRoute: typeof MedicationListRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddMedicationRoute: AddMedicationRoute,
  AuthRoute: AuthRoute,
  HistoryRoute: HistoryRoute,
  HomeRoute: HomeRoute,
  MedicationListRoute: MedicationListRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/AddMedication",
        "/Auth",
        "/History",
        "/Home",
        "/MedicationList"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/AddMedication": {
      "filePath": "AddMedication.tsx"
    },
    "/Auth": {
      "filePath": "Auth.tsx"
    },
    "/History": {
      "filePath": "History.tsx"
    },
    "/Home": {
      "filePath": "Home.tsx"
    },
    "/MedicationList": {
      "filePath": "MedicationList.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
